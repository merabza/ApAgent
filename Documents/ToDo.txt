15 ივლისი 2021
1. დაწესდეს არქივის ფაილის მაქსიმალური ზღვარი. თუ ახალი ფაილის დამატების მერე არქივი გასცდება ზღვარს, ფაილს დაერქვას ნაწილის ნომერი და ფაილების დაარქივება გაგრძელდეს ახალ ფაილში.
2. ფაილების ატვირთვის პროცესი თუ შეწყდა შესაძლებელი უნდა იყოს ავტომატური განახლება. ამისათვის, მიუხედავად იმისა დაარქივდა თუ არა ფაილი, უნდა მოხდეს საჭირო ატვირთვების შემოწმება და რიგში ჩაყენება.
3. ფოლდერზე შეიძლებოდეს იმის მითითება, რომ კი არ დააარქივდეს, არამედ დასინქრონიზდეს ფაილ სერვერის მხარეს.

20 ივნისი 2021
1. ბაზების ბექაპირების ნაბიჯების გენერირებისას ბექაპის პრეფიქსის დაგენერირებისას ბოლოში უნდა დაემატოს _

19 ივნისი 2021
1. მონაცემთა ბაზების ბექაპირების ნაბიჯების შექმნისას უნდა მოხდეს შემდეგის გათვალისწინება: თუ მონაცემთა ბაზა ლოკალურია, მაშინ ბაზის მხარეს ბექაპირების ფოლდერი, ბაზიდან მოსაქაჩი ფოლდერის ფაილსაცავი და ნაბიჯის ლოკალური ფოლდერი ერთმანეთს უნდა ემთხვეოდეს.
+2. როცა ფაილების ფაილების ბექაპირებისას მითითებულია ფოლდერების ცალცალკე ბექაპირება, ამ დროს თუ აღმოჩნდა ერთი მაინც ფორლერის ბექაპი გაკეთებული დანარჩენს აღარ აკეთებს. ცალცალკე ბეკაპირებისას არსებული ბექაპის შემოწმება უნდა მოხდეს თითოეული ფოლდერისათვის ცალკე.


26 მაისი 2021
1. რესერვერში საათობრივი ამოცანების ავტომატური გაშვება არის გასასწორებელი

8 მაისი 2021
1. cli ინტერფეისით პროცესის გაშვებისას პროცესი უნდა გამოიტანოს სპეციალურმა მონიტორმა. ეს უნდა გაკეთდეს იმიტომ, რომ კონსოლთან ურთიერთობა ჰქონდეს მხოლოდ ერთ პროცესს და ინფორმაციის გამოტანა უფრო დალაგებული გახდება
2. სერვისის აწყობა, რომელიც საშუალებას მოგვცემს ჩარევის გარეშე გააკეთოს პროგრამამ ყველა დაკისრებული სამუშაო.



24 აპრილი 2021
+1. ყველა სამუშაოს ნაბიჯისათვის უნდა შემოწმდეს მიმდინარე პერიოდში მოხდა თუ არა ამ ნაბიჯის შესრულება და თუ უკვე შესრულდა, ეს ნაბიჯი აღარ უნდა შესრულდეს (ეს ამოცანა გაკეთებულია მხოლოდ მულტიბაზების დამუშავების ნაბიჯებისათვის, სადაც გამოყენებულია სპეციალური ფაილების შექმნა და შემდგომში მათი არსებობსი შემოწმება. ბაზებისა და ფაილების ბექაპებისათვის საჭირო იქნება ბექაფების ფაილების თარიღების შემოწმება. სხვა დარჩენილი ნაბიჯებისათვის ასევე უნდა გამოყენებული იყოს სპეციალური ფაილების მექანიზმი, თუმცა შესაძლებელი უნდა იყოს ზოგიერთ ნაბიჯს მიეთითოს, რომ პერიოდს მნიშვნელობა არ აქვს და ყოველშვის უნდა შესრულდეს ეს ნაბიჯი)

16 აპრილი 2021
+1. დასასრულებელია მონაცემთა ბაზასთან ვებაგენტით დაკავშირებისას სერვერის სახელის გამოყენება. ეს უნდა გათვალისწინდეს ჯობების სხვადასხვა ნაბიჯებში. (ეს პრობლემა აღმოჩენილი იყო ჭკვიანი სისტემის შემუშავებისას, რომელიც უნდა უზრუნველყოფდეს იმას, რომ ერთიდაიგივე პერიოდში რაღაც სამუშაოები რამდენჯერმე არ შესრულდეს. ამ სისტემაზე მუშაობაც დასასრულებელია)

31 მარტი 2021
+1. ჭკვიანი სქემის მიხედვით ზედმეტი ფაილების წაშლა იმ ფოლდერებში და ფაილსაცავებში, სადაც იქმნება ბექაპები და ასლები.
+-2. დარჩენილი ნაბიჯების რეალიზაცია:
 +2.1. MultiDatabaseProcessStepCommand
 +2.2. RunProgramStepCommand
+3. ჭკვიანი სისტემის შემუშავება, რომელიც უზრუნველყოფს შემოწმდეს უკვე შესრულებული სამუშაოს შესახებ და ზედმეტად არ გაკეთდეს ზოგიერთი სამუშაო. მაგალითად დღეღამის განმავლობაში მხოლოდ ერთხელ მოხდეს ბაზებისა და ფაილების ბექაპირება, აგრეთვე ბაზების სხვადასხვა ტიპის მომსახურება და სხვა.




+JobsBySchedules რედაქტორი არ გვაქვს და გასაკეთებელია. სავარაუდონ უნდა გაკეთდეს შედულეს რედაქტორის ქვეშ




+1. ჩანაწერის სახელის რედაქტირება უნდა შეიძლებოდეს ცალკე, ისევე როგორც შეიძლება სხვა ველების რედაქტირება.
2. დანარჩენი რედაქტორები გაფუჭდა მას მერე რაც გავაკეთე ველების ცალცალკე რედატირება და საჭიროა მათი აღდგენა.
 +2.1. აექივატორების რედაქტორი გავასწორე, თუმცა დარჩა გასაკეთებელი პ5
 -2.2. მონაცემთა ბაზებთან კავშირების რედაქტორი
   პრინციპში გაკეთებულია, დარჩა მხოლოდ ის, რომ 
     +2.2.1. ნებისმიერი ცვლილებისას მოხდეს ბაზასთან დაკავშირების შესაძლებლობის შემოწმება
     +2.2.2. პაროლის შეყვანისას პაროლი დაიფაროს * ვარსკვლავებით
  +2.3. გამონაკლისების სიმრავლეების რედაქტორი
  +2.4. გამონაკლისების სიმრავლის ფაილების ნიღმის რედაქტორი
  2.5. ფაილების ბექაპის ფოლდერის რედაქტორი
  2.6. ფაილსაცავების რედაქტორი
  2.7. სამუშაოების დროების დაგეგმვების რედაქტორი
  +2.8. ჭკვიანი სქემების რედაქტორი
  +2.9. ჭკვიანი სქემების დეტალების რედაქტორი
3. დასაბექაპებელი ფაილების სიის შესადგენად შესაძლებელი უნდა იყოს ერთი ფოლდერის მითითება და იქიდან ქვეფოლდერების მონიშვნა მოხსნით ერთდროულად რამდენიმე ფოლდერის შენახვა სიაში
+4. ახალი ფოლდერის დამატებისას ავტომატურად შექმნილი მასკა უნდა ითვალისწინებდეს არსებულ მასკებს და თავიდანვე უნიკალური ვარიანტი უნდა შექმნას.
5. ველების სიის გამოტანისას ველები, რომლებთანაც მუშაობა დაშვებული არ არის, უნდა გამოვიდეს მკრთალად, ან საერთოდ არ გამოვიდეს.
+6. პ2 ცვლილებებისას გამოჩნდა, რომ InputRecordData კოდი შეიძლება გაუნივერსალდეს და გადავიდეს Cruder-ში
+7. FieldEditor და Cruder კლასებში თავმოყრილია სხვადასხვა ტიპის ველების რედაქტორების შექმნისა და გამოძახების მეთოდები. ზოგი მეორედება. ამიტომ სჯობია სამზადდეს სტატიკური კლასი Inputer, რომელშიც გადავა ეს მეთოდები.
+-8. ესქეიფების დამუშავება ინფორმაციის შეტანისას ისევე უნდა მოხდეს, როგორც კედება ტექსტური ველის შეტანისას შესაბამისი ექსეფშენის გამოყენებით. (ნაწილობრივ გაკეთდა, უბრალოდ გასატესტია დამატებით)
9. მონაცემთა ბაზებთან კავშირების რედაქტორში საჭიროა დაემატოს ავტომატური გენერატორი


